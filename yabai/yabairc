yabai -m config layout bsp

yabai -m config window_placement second_child

yabai -m config top_padding 12
yabai -m config bottom_padding 12
yabai -m config left_padding 12
yabai -m config right_padding 12
yabai -m config window_gap 12

yabai -m config mouse_follows_focus on

yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^Karabiner-Elements$" manage=off
yabai -m rule --add app="^FortiClient*$" manage=off
yabai -m rule --add app="^Riot Client$" manage=off
yabai -m rule --add app="^League of Legends$" manage=off

#! /usr/bin/env zsh

# If no window on the current space is focused after a window is destroyed or
# minimized, or an application is hidden, focus the window under the cursor.
yabai -m signal --add event=window_destroyed \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=window_minimized \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=application_hidden \
  action="${functions[focus_under_cursor]}"

function focus_under_cursor {
  if yabai -m query --windows --space |
      jq -er 'map(select(.focused == 1)) | length == 0' >/dev/null; then
    yabai -m window --focus mouse 2>/dev/null || true
  fi
}

yabai -m signal --add event=space_changed action="\
current_space_id=\$(yabai -m query --spaces --space | jq -r '.id'); \
focused_window_id=\$(yabai -m query --windows --space | jq -r 'map(select(.\"is-minimized\" == false)) | .[0]?.id'); \
if [ -n \"\$focused_window_id\" ] && [ \"\$focused_window_id\" != \"null\" ]; then \
    yabai -m window --focus \$focused_window_id; \
fi"
